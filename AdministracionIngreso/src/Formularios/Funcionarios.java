/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import GUI.MainFrame;
import clases.ConexionBD;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.sql.Blob;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Rec Tecnologicos
 */
public class Funcionarios extends javax.swing.JDialog {

    ConexionBD con = new ConexionBD();
    DefaultTableModel modelo;
    private final MainFrame frame;
    /**
     * Creates new form Funcionarios
     * @param parent
     * @param modal
     */
    public Funcionarios(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null);
        modelo =(DefaultTableModel) tableFuncionarios.getModel();
        frame = new MainFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtfBusqueda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableFuncionarios = new javax.swing.JTable();
        panelFoto = new javax.swing.JPanel();
        fotoFuncionario = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        ultimoRegistro = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Funcionarios");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jtfBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfBusquedaKeyPressed(evt);
            }
        });

        tableFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombre", "Correo", "Dependencia", "Cargo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableFuncionarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tableFuncionariosMouseReleased(evt);
            }
        });
        tableFuncionarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tableFuncionariosKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tableFuncionarios);
        if (tableFuncionarios.getColumnModel().getColumnCount() > 0) {
            tableFuncionarios.getColumnModel().getColumn(0).setPreferredWidth(20);
            tableFuncionarios.getColumnModel().getColumn(1).setPreferredWidth(100);
            tableFuncionarios.getColumnModel().getColumn(2).setPreferredWidth(100);
            tableFuncionarios.getColumnModel().getColumn(3).setPreferredWidth(70);
            tableFuncionarios.getColumnModel().getColumn(4).setPreferredWidth(80);
        }

        panelFoto.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout panelFotoLayout = new javax.swing.GroupLayout(panelFoto);
        panelFoto.setLayout(panelFotoLayout);
        panelFotoLayout.setHorizontalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fotoFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelFotoLayout.setVerticalGroup(
            panelFotoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(fotoFuncionario, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Funcionarios");

        jButton1.setText("Ver Estadisitcas");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Ver Registros Último Mes");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel7.setText("Último Registro:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 663, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton2))
                            .addComponent(panelFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ultimoRegistro, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jtfBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(jtfBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelFoto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ultimoRegistro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(0, 42, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        setFilas();
    }//GEN-LAST:event_formComponentShown

    private void jtfBusquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBusquedaKeyPressed
        // TODO add your handling code here:
        int filas = tableFuncionarios.getRowCount();
        for (int i = 0; i < filas; i++) {
            modelo.removeRow(0);
        }
        setFilas();
    }//GEN-LAST:event_jtfBusquedaKeyPressed

    private void tableFuncionariosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tableFuncionariosKeyReleased
        // TODO add your handling code here:
        setDatos();
        setEstadisticas();
    }//GEN-LAST:event_tableFuncionariosKeyReleased

    private void tableFuncionariosMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableFuncionariosMouseReleased
        // TODO add your handling code here:
        setDatos();
        setEstadisticas();
    }//GEN-LAST:event_tableFuncionariosMouseReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String numdoc = String.valueOf(tableFuncionarios.getValueAt(tableFuncionarios.getSelectedRow(), 0));
        
        new verEstadisticas(frame, true, numdoc).setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String numdoc = String.valueOf(tableFuncionarios.getValueAt(tableFuncionarios.getSelectedRow(), 0));
        new verRegistrosMes(frame, true, numdoc).setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void setFilas() {
        try {
            String nombrebusqueda = jtfBusqueda.getText();
            String sql = "select numdoc, nombre, correo, dependencia, cargo from funcionarios where nombre like '%"+nombrebusqueda+"%'order by nombre";
            
            PreparedStatement pst = con.getConexion().prepareStatement(sql);
            ResultSet result = pst.executeQuery();
            
            Object datos[]=new Object[5]; //Numero de columnas de la tabla
            
            TableRowSorter<TableModel> elQueOrdena = new TableRowSorter<TableModel>(modelo);
            tableFuncionarios.setRowSorter(elQueOrdena);
            
            while (result.next()) {
                for (int i = 0; i < 5; i++) {
                    datos[i] = result.getObject(i + 1);
                }
                modelo.addRow(datos);
            }
            result.close();
        } catch (SQLException ex) {
            System.out.print(ex.getMessage());
            Logger.getLogger(Funcionarios.class.getName()).log(Level.SEVERE, null,ex);
        }
    }
    
    public void setEstadisticas(){
        try {
            String sql = "SELECT hora, fecha, tipo, razon, observacion FROM registros where numdoc = "+tableFuncionarios.getValueAt(tableFuncionarios.getSelectedRow(), 0)+" order by idregistros desc LIMIT 1";
            
            PreparedStatement pst = con.getConexion().prepareStatement(sql);
            ResultSet result = pst.executeQuery();

            while(result.next()){
                ultimoRegistro.setText(result.getString(3)+" "+result.getString(1)+" - "+result.getString(2));
            }
        } catch (SQLException ex) {
            Logger.getLogger(verEstadisticas.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }
    
    public void setDatos(){
        int fila = tableFuncionarios.getSelectedRow();
        if (fila != -1) {
            try {
                System.out.println(tableFuncionarios.getValueAt(fila, 0));
                String sql = "SELECT foto FROM funcionarios where numdoc = "+tableFuncionarios.getValueAt(fila, 0)+" LIMIT 1";
                
                PreparedStatement pst = con.getConexion().prepareStatement(sql);
                ResultSet result = pst.executeQuery();
                
                while(result.next()){
                    //byte[] imagen = result.getBytes("foto");
                    Blob blob = result.getBlob(1);
                //primero me aseguro que no este vacío.
                if(blob != null){
                   try{
                  byte[] data = blob.getBytes(1, (int)blob.length());
                  BufferedImage img = null;

                  try{
                    img = ImageIO.read(new ByteArrayInputStream(data));
                  }
                  catch(IOException ex){
                    System.out.println(ex.getMessage());
                  }

                 ImageIcon icono = new ImageIcon(img.getScaledInstance(282, 210, Image.SCALE_SMOOTH));
                 
                 //JOptionPane.showMessageDialog(null, "Imagenes", "Imagen", JOptionPane.INFORMATION_MESSAGE, icono);
                 
                 fotoFuncionario.setIcon(icono);
                 
                  }catch(SQLException ex){
                       System.out.println(ex.getMessage());
                  }
                }
                else{
                    System.out.println("No hay foto");
                }
                }
            } catch (SQLException ex) {
                Logger.getLogger(Funcionarios.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel fotoFuncionario;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jtfBusqueda;
    private javax.swing.JPanel panelFoto;
    private javax.swing.JTable tableFuncionarios;
    private javax.swing.JLabel ultimoRegistro;
    // End of variables declaration//GEN-END:variables

    
}
